Train Ticket Booking Service

  This train ticket service is implemented on top of servlet requests which is very simple to create dynamic web pages. 
  Here we used H2 Database as in memory database to store the data. So server restarted, data will not be available as we follow in-memory database. 
  We can persist this data in disk too if we need. 
  Also supported hash as in memory database. It is based on inmemoryType constand in Database.java

Prerequisites:
  1. Eclipse should be installed. Download it from here ( https://www.eclipse.org/downloads/packages/installer )  
  2. Apache Tomcat server should be installed ( https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.89/bin/apache-tomcat-9.0.89.tar.gz )
  3. Clone this project in your machine
  4. Change normal project into dynamic web app project( https://mkyong.com/java/how-to-convert-java-project-to-web-project-in-eclipse )
  5. Get json jar and it must added in build path (https://mvnrepository.com/artifact/org.json/json/20140107)
  6. Download H2 database jar and add build path (https://search.maven.org/remotecontent?filepath=com/h2database/h2/2.2.224/h2-2.2.224.jar)
  7. If jars not effect not class or found exception occur, kindly add these jars under tomcat lib folder


APIs:
1. Booking Ticket
	API: /api/v1/tickets
	Method: POST
	Params:
		email - kooda@test.com
		first_name - kooda 
		last_name  - lingam
	Success Response:
		{
    "data": {
        "amount_paid": "5.0",
        "user_id": "1000000000",
        "user_name": "kooda lingam",
        "seat_no": "1",
        "from": "London",
        "section": "A",
        "to": "France",
        "ticket_id": "1000000001",
        "booked_time": "1718483483168"
    },
    "success": true
	}
	
	Error Response:
	i) 
		{
    "success": false,
    "error": {
        "code": 1001,
        "message": "The given email user was already booked the ticket"
    }
	}
	ii)
		{
    "success": false,
    "error": {
        "code": 1002,
        "message": "No seats available to book"
    }
	}
	
		
		
	
2. Display ticket or receipt for the user
	API: /api/v1/tickets
	Method: GET
	Params:
		action - viewreceipt
		user_id - 1000000005 
	Success Response:
	{
    "data": {
        "amount_paid": "5.0",
        "user_id": "1000000004",
        "user_name": "kooda lingam2",
        "seat_no": "3",
        "from": "London",
        "section": "A",
        "to": "France",
        "ticket_id": "1000000005",
        "booked_time": "1718483808895"
    },
    "success": true
	}	
	
	
3. View the users and seat allocation
	API: /api/v1/tickets
	Method: GET
	Params:
		action - viewsection
		section - A 
	Success Response:
	{
    "data": [
        {
            "user_id": "1000000000",
            "user_name": "kooda lingam1",
            "seat_no": "1"
        },
        {
            "user_id": "1000000002",
            "user_name": "kooda lingam2",
            "seat_no": "2"
        }
    ],
    "success": true
	}
	
	
4. Remove the user from the train
	API: /api/v1/users
	Method: DELETE
	Params:
		user_id - 1000000005 
	Success Response:
	{
    "success": true
	}	
	
5. Modify user's seat
	API: /api/v1/tickets
	Method: PUT
	Params:
		action - modify
		user_id - 1000000005 
		seat_no - 3
	Success Response:
	{
    "data": {
        "amount_paid": "5.0",
        "user_id": "1000000004",
        "user_name": "kooda lingam2",
        "seat_no": "3",
        "from": "London",
        "section": "A",
        "to": "France",
        "ticket_id": "1000000005",
        "booked_time": "1718483808895"
    },
    "success": true
	}

	Error response:
		{
    "success": false,
    "error": {
        "code": 1000,
        "message": "Unable to modify the ticket for the user. Already someone occuppied this seat"
    }
	}


Common Error Responses:
i)
	{
    "success": false,
    "error": {
        "code": 1004,
        "message": "No user found for this user Id"
    }
	}

ii)
	{
    "success": false,
    "error": {
        "code": 1003,
        "message": "No ticket found for this user"
    }
	}
	
iii)
	{
    "success": false,
    "error": {
        "code": 500,
        "message": "Technical issues at the moment"
    }
	}
iv)
{
    "success": false,
    "error": {
        "code": 1005,
        "message": "Invalid Section"
    }
}

